		SELECT 
			CASE
				WHEN WD_Formatted.EO_Month IS NOT NULL AND Q_Formatted.[Actual Date] IS NOT NULL THEN Q_Formatted.[Actual Date]
				WHEN WD_Formatted.EO_Month IS NULL THEN Q_Formatted.[Actual Date]
				WHEN Q_Formatted.[Actual Date] IS NULL THEN WD_Formatted.EO_Month
				ELSE 'Error'
			END AS 'Date Fix',
			CASE
				WHEN WD_Formatted.CostCenterRefID IS NOT NULL AND Q_Formatted.CostCenterRefID IS NOT NULL THEN Q_Formatted.CostCenterRefID
				WHEN WD_Formatted.CostCenterRefID IS NULL THEN Q_Formatted.CostCenterRefID
				WHEN Q_Formatted.CostCenterRefID IS NULL THEN WD_Formatted.CostCenterRefID
				ELSE 'Error'
			END AS 'Cost Center Fix',
			CASE
				WHEN WD_Formatted.CategoryRefID IS NOT NULL AND Q_Formatted.[Category-Ledger] IS NOT NULL THEN Q_Formatted.[Category-Ledger]
				WHEN WD_Formatted.CategoryRefID IS NULL THEN Q_Formatted.[Category-Ledger]
				WHEN Q_Formatted.[Category-Ledger] IS NULL THEN WD_Formatted.CategoryRefID
				ELSE 'Error'
			END AS 'Category Fix',
			Q_Formatted.[Actual Amount],
			WD_Formatted.[Budgeted Amount],
			py.[PY Amount],
			IIF(Q_Formatted.[Actual Amount] IS NULL, WD_Formatted.[Budgeted Amount],Q_Formatted.[Actual Amount]) AS 'Forecast'
		FROM
		(
		SELECT EOMONTH(DATEFROMPARTS(OB.CalendarYear,OB.MonthNumber,1),0) AS 'EO_Month', OB.CostCenterRefID, OB.CategoryRefID, CONCAT(CONCAT((EOMONTH(DATEFROMPARTS(OB.CalendarYear,OB.MonthNumber,1),0)),OB.CostCenterRefID), OB.CategoryRefID) AS 'Key', SUM(OB.MonthlyBudget) AS 'Budgeted Amount'
		FROM
			(SELECT *,
				CASE
					WHEN OB_Month.FiscalBudgetMonth = 'July' THEN 7
					WHEN OB_Month.FiscalBudgetMonth = 'August' THEN 8
					WHEN OB_Month.FiscalBudgetMonth = 'September' THEN 9
					WHEN OB_Month.FiscalBudgetMonth = 'October' THEN 10
					WHEN OB_Month.FiscalBudgetMonth = 'November' THEN 11
					WHEN OB_Month.FiscalBudgetMonth = 'December' THEN 12
					WHEN OB_Month.FiscalBudgetMonth = 'January' THEN 1
					WHEN OB_Month.FiscalBudgetMonth = 'February' THEN 2
					WHEN OB_Month.FiscalBudgetMonth = 'March' THEN 3
					WHEN OB_Month.FiscalBudgetMonth = 'April' THEN 4
					WHEN OB_Month.FiscalBudgetMonth = 'May' THEN 5
					WHEN OB_Month.FiscalBudgetMonth = 'June' THEN 6
					ELSE 'Error'
				END AS 'MonthNumber',
				CASE
					WHEN OB_Month.FiscalBudgetMonth = 'July' THEN OB_Month.FiscalYear - 1
					WHEN OB_Month.FiscalBudgetMonth = 'August' THEN OB_Month.FiscalYear - 1
					WHEN OB_Month.FiscalBudgetMonth = 'September' THEN OB_Month.FiscalYear - 1
					WHEN OB_Month.FiscalBudgetMonth = 'October' THEN OB_Month.FiscalYear - 1
					WHEN OB_Month.FiscalBudgetMonth = 'November' THEN OB_Month.FiscalYear - 1
					WHEN OB_Month.FiscalBudgetMonth = 'December' THEN OB_Month.FiscalYear - 1
					WHEN OB_Month.FiscalBudgetMonth = 'January' THEN OB_Month.FiscalYear
					WHEN OB_Month.FiscalBudgetMonth = 'February' THEN OB_Month.FiscalYear
					WHEN OB_Month.FiscalBudgetMonth = 'March' THEN OB_Month.FiscalYear
					WHEN OB_Month.FiscalBudgetMonth = 'April' THEN OB_Month.FiscalYear
					WHEN OB_Month.FiscalBudgetMonth = 'May' THEN OB_Month.FiscalYear
					WHEN OB_Month.FiscalBudgetMonth = 'June' THEN OB_Month.FiscalYear
					ELSE 'Error'
				END AS 'CalendarYear'
			FROM WORKDAY.vw_Fact_Workday_OperatingBudget_Summary OB_Month) OB
		WHERE OB.Scenario IN ('FY24 Revised Budget')
		GROUP BY EOMONTH(DATEFROMPARTS(OB.CalendarYear,OB.MonthNumber,1),0), OB.CostCenterRefID, OB.CategoryRefID, CONCAT(CONCAT((EOMONTH(DATEFROMPARTS(OB.CalendarYear,OB.MonthNumber,1),0)),OB.CostCenterRefID), OB.CategoryRefID) 
		) WD_Formatted
	FULL OUTER JOIN (
		SELECT EOMONTH(WD.AccountingDateJournal,0) AS 'Actual Date',WD.CostCenterRefID, WD.[Category-Ledger], WD.Category,CONCAT(CONCAT(EOMONTH(WD.AccountingDateJournal,0),WD.CostCenterRefID),WD.[Category-Ledger]) AS 'Key', SUM(WD.LedgerBudgetNaturalDebitCreditAmt) AS 'Actual Amount'
		FROM
			(SELECT *,
				CASE
					WHEN WD_Unformatted.SpendCategoryRefID IS NOT NULL THEN CONCAT(CONCAT(WD_Unformatted.SpendCategoryRefID,'-'),WD_Unformatted.LedgerAccountRefID)
					WHEN WD_Unformatted.RevenueCategoryRefID IS NOT NULL THEN CONCAT(CONCAT(WD_Unformatted.RevenueCategoryRefID,'-'),WD_Unformatted.LedgerAccountRefID)
					WHEN WD_Unformatted.SpendCategoryRefID IS NULL AND WD_Unformatted.RevenueCategoryRefID IS NULL THEN CONCAT('XX00000-',WD_Unformatted.LedgerAccountRefID)
					ELSE 'Error'
				END AS 'Category-Ledger',
				CASE
					WHEN WD_Unformatted.SpendCategoryRefID IS NOT NULL THEN WD_Unformatted.SpendCategoryRefID
					WHEN WD_Unformatted.RevenueCategoryRefID IS NOT NULL THEN WD_Unformatted.RevenueCategoryRefID
					WHEN WD_Unformatted.SpendCategoryRefID IS NULL AND WD_Unformatted.RevenueCategoryRefID IS NULL THEN 'N/A'
					ELSE 'Error'
				END AS 'Category'
			FROM [Workday].[vw_Fact_WD_JournalLine] WD_Unformatted) WD
			WHERE WD.LedgerTypeRefID IN ('Actuals')
		GROUP BY EOMONTH(WD.AccountingDateJournal,0),WD.CostCenterRefID, WD.[Category-Ledger],WD.Category,CONCAT(CONCAT(EOMONTH(WD.AccountingDateJournal,0),WD.CostCenterRefID),WD.[Category-Ledger])
		) Q_Formatted ON Q_Formatted.[Key] = WD_Formatted.[key]
	FULL OUTER JOIN (
		SELECT py_key, SUM([PY Amount]) as 'PY Amount'
		FROM (
			SELECT EOMONTH(gp.TransactionDate) AS 'PY Month', cc_cw.WorkDayCostCenterRefID, cat_cw.WorkDayCatergoryRefID, CONCAT(CONCAT(CONCAT(CONCAT(EOMONTH(gp.transactionDate),'-'),cc_cw.WorkDayCostCenterRefID),'-'),cat_cw.WorkDayCatergoryRefID) AS 'py_key',SUM(gp.NetAmount) AS 'PY Amount'
			FROM vw_GPActualsForQuestica gp
			LEFT JOIN vw_GreatPlainsWorkDayCostCenterCrosswalk cc_cw ON cc_cw.GreatPlainsCostCenterRefID = gp.CostCenter
			LEFT JOIN vw_GreatPlainsWorkDayGeneralLedgerCategoryCrosswalk cat_cw ON cat_cw.GreatPlainsGeneralLedgerAccountRefID = gp.Account
			WHERE gp.TransactionDate >= '7/1/2022'
			GROUP BY EOMONTH(gp.TransactionDate), cc_cw.WorkDayCostCenterRefID, cat_cw.WorkDayCatergoryRefID, CONCAT(CONCAT(CONCAT(CONCAT(EOMONTH(gp.transactionDate),'-'),cc_cw.WorkDayCostCenterRefID),'-'),cat_cw.WorkDayLedgerRefID))PY2
		GROUP BY py_key
	) py ON py.py_key = CONCAT(CONCAT(CONCAT(CONCAT(DATEADD(YEAR,-1,Q_Formatted.[Actual Date]),'-'),Q_Formatted.CostCenterRefID),'-'),Q_Formatted.Category)
WHERE 
	CASE
		WHEN WD_Formatted.EO_Month IS NOT NULL AND Q_Formatted.[Actual Date] IS NOT NULL THEN Q_Formatted.[Actual Date]
		WHEN WD_Formatted.EO_Month IS NULL THEN Q_Formatted.[Actual Date]
		WHEN Q_Formatted.[Actual Date] IS NULL THEN WD_Formatted.EO_Month
		ELSE 'Error'
	END > '7/1/2023'
AND 
	CASE
		WHEN WD_Formatted.EO_Month IS NOT NULL AND Q_Formatted.[Actual Date] IS NOT NULL THEN Q_Formatted.[Actual Date]
		WHEN WD_Formatted.EO_Month IS NULL THEN Q_Formatted.[Actual Date]
		WHEN Q_Formatted.[Actual Date] IS NULL THEN WD_Formatted.EO_Month
		ELSE 'Error'
	END <= '6/30/2024'
AND CONCAT(CONCAT(Q_Formatted.[Actual Amount],WD_Formatted.[Budgeted Amount]),py.[PY Amount]) NOT IN ('0NULL0')
